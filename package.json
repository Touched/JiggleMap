{
  "name": "@touched/jigglemap",
  "version": "3.4.0",
  "description": "A map editor for the Game Boy Advance PokÃ©mon games",
  "repository": {
    "type": "git",
    "url": "git://github.com/Touched/JiggleMap.git"
  },
  "main": "build/main.js",
  "engines": {
    "npm": ">=3",
    "node": ">=5"
  },
  "author": "Touched",
  "license": "MIT",
  "scripts": {
    "analyze:clean": "rimraf stats.json",
    "preanalyze": "npm run analyze:clean",
    "analyze": "node ./internals/scripts/analyze.js",
    "extract-intl": "babel-node --presets latest,stage-0 -- ./internals/scripts/extract-intl.js",
    "npmcheckversion": "node ./internals/scripts/npmcheckversion.js",
    "preinstall": "npm run npmcheckversion",
    "postinstall": "npm run build:dll",
    "prebuild": "npm run build:clean",
    "build": "cross-env NODE_ENV=production webpack --config internals/webpack/webpack.prod.babel.js --color -p --progress",
    "build:native": "node-gyp-rebuild",
    "build:clean": "npm run test:clean && rimraf ./build",
    "build:dll": "node ./internals/scripts/dependencies.js",
    "build:electron": "npm run build:native && npm run build:electron:main && npm run build:electron:renderer",
    "build:electron:main": "cross-env APPLICATION=electron NODE_ENV=production webpack --config internals/webpack/webpack.electron.babel.js --color --progress",
    "build:electron:renderer": "cross-env APPLICATION=electron NODE_ENV=production webpack --config internals/webpack/webpack.prod.babel.js --color --progress",
    "check": "flow check",
    "start": "cross-env NODE_ENV=development node server",
    "start:electron": "cross-env APPLICATION=electron NODE_ENV=development node server --electron",
    "start:tunnel": "cross-env NODE_ENV=development ENABLE_TUNNEL=true node server",
    "start:production": "npm run test && npm run build && npm run start:prod",
    "start:prod": "cross-env NODE_ENV=production node server",
    "presetup": "npm i chalk shelljs",
    "setup": "node ./internals/scripts/setup.js",
    "postsetup": "npm run build:dll",
    "clean": "shjs ./internals/scripts/clean.js",
    "clean:all": "npm run analyze:clean && npm run test:clean && npm run build:clean",
    "generate": "plop --plopfile internals/generators/index.js",
    "lint": "npm run lint:js",
    "lint:eslint": "eslint --ignore-path .gitignore --ignore-pattern internals/scripts",
    "lint:js": "npm run lint:eslint -- . ",
    "lint:staged": "lint-staged",
    "pretest": "npm run test:clean && npm run lint && npm run check",
    "test:clean": "rimraf ./coverage",
    "test": "cross-env NODE_ENV=test jest --coverage",
    "test:watch:coverage": "cross-env NODE_ENV=test jest --watchAll --coverage",
    "test:update-snapshot": "cross-env NODE_ENV=test jest --updateSnapshot",
    "test:watch": "cross-env NODE_ENV=test jest --watchAll",
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "electron:hot": "cross-env HOT=1 NODE_ENV=development electron -r babel-register -r babel-polyfill ./app/main.js",
    "package:windows": "npm run build:electron && build --win --x64",
    "package:linux": "npm run build:electron && build --linux",
    "package:mac": "npm run build:electron && build --mac",
    "package:clean": "rimraf dist",
    "storybook": "start-storybook -p 6006",
    "build-storybook": "build-storybook"
  },
  "build": {
    "productName": "JiggleMap",
    "appId": "org.touched.JiggleMap",
    "dmg": {
      "contents": [
        {
          "x": 410,
          "y": 150,
          "type": "link",
          "path": "/Applications"
        },
        {
          "x": 130,
          "y": 150,
          "type": "file"
        }
      ]
    },
    "files": [
      "build/",
      "node_modules/",
      "package.json"
    ],
    "win": {
      "target": "nsis"
    },
    "linux": {
      "target": [
        "deb",
        "AppImage",
        "pacman"
      ]
    }
  },
  "lint-staged": {
    "*.js": "lint:eslint"
  },
  "pre-commit": "lint:staged",
  "babel": {
    "presets": [
      [
        "latest",
        {
          "es2015": {
            "modules": false
          }
        }
      ],
      "react",
      "stage-0"
    ],
    "env": {
      "production": {
        "only": [
          "app"
        ],
        "plugins": [
          "transform-react-remove-prop-types",
          "transform-react-constant-elements",
          "transform-react-inline-elements"
        ]
      },
      "test": {
        "plugins": [
          "transform-es2015-modules-commonjs",
          "dynamic-import-node"
        ]
      }
    }
  },
  "dllPlugin": {
    "path": "node_modules/react-boilerplate-dlls",
    "exclude": [
      "chalk",
      "compression",
      "cross-env",
      "express",
      "ip",
      "minimist",
      "sanitize.css"
    ],
    "include": [
      "core-js",
      "lodash",
      "eventsource-polyfill"
    ]
  },
  "jest": {
    "collectCoverageFrom": [
      "app/**/*.{js,jsx}",
      "!app/**/*.test.{js,jsx}",
      "!app/*/RbGenerated*/*.{js,jsx}",
      "!app/app.js",
      "!app/routes.js",
      "!app/main.js"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "app/global-styles.js"
    ],
    "moduleDirectories": [
      "node_modules",
      "app"
    ],
    "moduleNameMapper": {
      ".*\\.node$": "<rootDir>/internals/mocks/nativeModule.js",
      ".*\\.(css|less|styl|scss|sass)$": "<rootDir>/internals/mocks/cssModule.js",
      ".*\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/image.js"
    },
    "setupTestFrameworkScriptFile": "<rootDir>/internals/testing/test-bundler.js",
    "testRegex": "tests/.*\\.test\\.js$"
  },
  "dependencies": {
    "@blueprintjs/core": "^1.32.0",
    "@blueprintjs/labs": "^0.13.0",
    "ajv": "^5.1.3",
    "ajv-keywords": "^2.0.0",
    "babel-polyfill": "6.20.0",
    "bluebird": "^3.5.0",
    "chalk": "1.1.3",
    "classnames": "^2.2.5",
    "compression": "1.6.2",
    "cross-env": "3.1.3",
    "debounce": "^1.1.0",
    "express": "4.14.0",
    "fontfaceobserver": "2.0.7",
    "fuzzy": "^0.1.3",
    "intl": "1.2.5",
    "invariant": "^2.2.2",
    "ip": "1.1.4",
    "lodash": "4.17.2",
    "mdi-react": "^1.9.32",
    "minimist": "1.2.0",
    "ramda": "^0.24.1",
    "react": "15.4.1",
    "react-addons-css-transition-group": "^15.6.2",
    "react-dom": "15.4.1",
    "react-helmet": "3.2.2",
    "react-hot-loader": "next",
    "react-intl": "2.1.5",
    "react-measure": "^2.0.2",
    "react-redux": "4.4.6",
    "react-three-renderer": "^3.1.0",
    "react-transition-group": "^1.1.3",
    "recompose": "^0.26.0",
    "redux": "3.6.0",
    "redux-form": "^7.1.1",
    "redux-saga": "^0.15.3",
    "redux-undo": "beta",
    "reselect": "2.5.4",
    "reselect-map": "^1.0.3",
    "sanitize.css": "4.1.0",
    "styled-components": "1.1.2",
    "svg-mesh-3d": "^1.1.0",
    "three": "^0.85.2",
    "three-renderer-css3d": "^1.0.0",
    "three-simplicial-complex": "^69.0.6",
    "warning": "^3.0.0",
    "whatwg-fetch": "2.0.1"
  },
  "devDependencies": {
    "@storybook/addon-actions": "^3.2.12",
    "@storybook/addon-links": "^3.2.12",
    "@storybook/react": "^3.2.12",
    "babel-cli": "6.18.0",
    "babel-core": "^6.25.0",
    "babel-eslint": "7.1.1",
    "babel-loader": "^7.0.0",
    "babel-minify-webpack-plugin": "^0.2.0",
    "babel-plugin-dynamic-import-node": "1.0.0",
    "babel-plugin-react-intl": "2.2.0",
    "babel-plugin-react-transform": "2.0.2",
    "babel-plugin-transform-es2015-modules-commonjs": "6.18.0",
    "babel-plugin-transform-react-constant-elements": "6.9.1",
    "babel-plugin-transform-react-inline-elements": "6.8.0",
    "babel-plugin-transform-react-remove-prop-types": "0.2.11",
    "babel-preset-latest": "6.16.0",
    "babel-preset-react": "6.16.0",
    "babel-preset-stage-0": "6.16.0",
    "babel-register": "^6.24.1",
    "cheerio": "0.22.0",
    "circular-dependency-plugin": "2.0.0",
    "coveralls": "2.11.15",
    "css-loader": "0.26.1",
    "devtron": "^1.4.0",
    "electron": "1.4.15",
    "electron-builder": "^17.3.1",
    "electron-debug": "^1.1.0",
    "electron-devtools-installer": "^2.2.0",
    "enzyme": "2.6.0",
    "eslint": "^3.19.0",
    "eslint-config-airbnb": "^15.0.1",
    "eslint-config-airbnb-base": "^11.2.0",
    "eslint-import-resolver-webpack": "0.8.0",
    "eslint-plugin-flowtype": "^2.34.0",
    "eslint-plugin-import": "2.2.0",
    "eslint-plugin-jsx-a11y": "^5.0.3",
    "eslint-plugin-react": "^7.0.1",
    "eslint-plugin-redux-saga": "0.1.5",
    "eventsource-polyfill": "0.9.6",
    "exports-loader": "0.6.3",
    "file-loader": "0.9.0",
    "flow-bin": "^0.55.0",
    "html-loader": "0.4.4",
    "html-webpack-plugin": "2.24.1",
    "image-webpack-loader": "2.0.0",
    "imports-loader": "0.6.5",
    "jest-cli": "^21.2.1",
    "lint-staged": "3.2.1",
    "mock-fs": "^4.3.0",
    "ngrok": "2.2.4",
    "node-loader": "^0.6.0",
    "node-plop": "0.5.4",
    "node-sass": "^4.5.3",
    "null-loader": "0.1.1",
    "offline-plugin": "4.5.2",
    "plop": "1.7.3",
    "pre-commit": "1.1.3",
    "react-addons-test-utils": "15.4.1",
    "rimraf": "2.5.4",
    "sass-loader": "^6.0.5",
    "shelljs": "0.7.5",
    "sinon": "2.0.0-pre",
    "style-loader": "0.13.1",
    "url-loader": "0.5.7",
    "webpack": "^2.6.1",
    "webpack-dev-middleware": "1.9.0",
    "webpack-hot-middleware": "2.15.0"
  }
}
